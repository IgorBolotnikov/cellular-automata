{
  "compilerOptions": {
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "jsx": "react-jsx",                                  /* Specify what JSX code is generated. */
    "jsxImportSource": "preact",                         /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "baseUrl": "./",
    "paths": {
      "src/*": ["./src/*"],
      "react": ["./node_modules/preact/compat/"],
      "react-dom": ["./node_modules/preact/compat/"]
    },
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "strictNullChecks": true,                            /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": true,                         /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,                         /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    "strictPropertyInitialization": true,                /* Check for class properties that are declared but not set in the constructor. */
    "alwaysStrict": true,                                /* Ensure 'use strict' is always emitted. */
    "exactOptionalPropertyTypes": true,                  /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "allowUnusedLabels": true,                           /* Disable error reporting for unused labels. */
    "allowUnreachableCode": true,                        /* Disable error reporting for unreachable code. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  }
}
